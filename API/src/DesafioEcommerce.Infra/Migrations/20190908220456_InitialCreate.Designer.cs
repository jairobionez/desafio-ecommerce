// <auto-generated />
using System;
using DesafioEcommerce.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DesafioEcommerce.Infra.Migrations
{
    [DbContext(typeof(EcommerceContext))]
    [Migration("20190908220456_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DesafioEcommerce.Domain.Entities.OrderItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnName("QUANTIDADE")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("PaymentNumber")
                        .HasColumnName("NROPAGAMENTO")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnName("VLRUNITARIO")
                        .HasColumnType("decimal(15,3)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentNumber");

                    b.ToTable("PEDIDOITEM");
                });

            modelBuilder.Entity("DesafioEcommerce.Domain.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NROPAGAMENTO")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("PaidDate")
                        .HasColumnName("DTAPAGAMENTO")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Total")
                        .HasColumnName("TOTAL")
                        .HasColumnType("decimal(15,3)");

                    b.Property<decimal>("TotalPaid")
                        .HasColumnName("TOTALPAGO")
                        .HasColumnType("decimal(15,3)");

                    b.HasKey("Id");

                    b.ToTable("PAGAMENTO");
                });

            modelBuilder.Entity("DesafioEcommerce.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SKU")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnName("QUANTIDADE")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EanCode")
                        .HasColumnName("CODEAN")
                        .HasColumnType("varchar(13)");

                    b.Property<byte[]>("Image")
                        .HasColumnName("IMAGEM")
                        .HasColumnType("image");

                    b.Property<decimal>("Value")
                        .HasColumnName("VALOR")
                        .HasColumnType("decimal(15,3)");

                    b.Property<decimal>("Weight")
                        .HasColumnName("PESO")
                        .HasColumnType("decimal(15,3)");

                    b.HasKey("Id");

                    b.ToTable("PRODUTO");
                });

            modelBuilder.Entity("DesafioEcommerce.Domain.Entities.OrderItems", b =>
                {
                    b.HasOne("DesafioEcommerce.Domain.Entities.Payment", "Payment")
                        .WithMany("Items")
                        .HasForeignKey("PaymentNumber")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DesafioEcommerce.Domain.Entities.Payment", b =>
                {
                    b.OwnsOne("DesafioEcommerce.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<int?>("PaymentId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("City")
                                .HasColumnName("CIDADE")
                                .HasColumnType("varchar(30)")
                                .HasMaxLength(30);

                            b1.Property<string>("Neighborhood")
                                .HasColumnName("BAIRRO")
                                .HasColumnType("varhcar(20)")
                                .HasMaxLength(20);

                            b1.Property<string>("Number")
                                .HasColumnName("NUMERO")
                                .HasColumnType("varhcar(6)")
                                .HasMaxLength(6);

                            b1.Property<string>("State")
                                .HasColumnName("ESTADO")
                                .HasColumnType("varhcar(20)")
                                .HasMaxLength(20);

                            b1.Property<string>("Street")
                                .HasColumnName("RUA")
                                .HasColumnType("varhcar(60)")
                                .HasMaxLength(60);

                            b1.Property<string>("ZipCode")
                                .HasColumnName("CEP")
                                .HasColumnType("varhcar(8)")
                                .HasMaxLength(8);

                            b1.ToTable("PAGAMENTO");

                            b1.HasOne("DesafioEcommerce.Domain.Entities.Payment")
                                .WithOne("Address")
                                .HasForeignKey("DesafioEcommerce.Domain.ValueObjects.Address", "PaymentId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("DesafioEcommerce.Domain.ValueObjects.Document", "Document", b1 =>
                        {
                            b1.Property<int?>("PaymentId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Number")
                                .HasColumnName("DOCUMENTO")
                                .HasColumnType("varchar(14)")
                                .HasMaxLength(14);

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnName("TIPODOCUMENTO")
                                .HasColumnType("varchar(4)")
                                .HasMaxLength(4);

                            b1.ToTable("PAGAMENTO");

                            b1.HasOne("DesafioEcommerce.Domain.Entities.Payment")
                                .WithOne("Document")
                                .HasForeignKey("DesafioEcommerce.Domain.ValueObjects.Document", "PaymentId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("DesafioEcommerce.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<int?>("PaymentId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Address")
                                .HasColumnName("EMAIL")
                                .HasColumnType("varchar(50)")
                                .HasMaxLength(50);

                            b1.ToTable("PAGAMENTO");

                            b1.HasOne("DesafioEcommerce.Domain.Entities.Payment")
                                .WithOne("Email")
                                .HasForeignKey("DesafioEcommerce.Domain.ValueObjects.Email", "PaymentId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("DesafioEcommerce.Domain.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<int?>("PaymentId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("FirstName")
                                .HasColumnName("NOME")
                                .HasColumnType("varchar(30)")
                                .HasMaxLength(30);

                            b1.Property<string>("LastName")
                                .HasColumnName("SOBRENOME")
                                .HasColumnType("varchar(70)")
                                .HasMaxLength(70);

                            b1.ToTable("PAGAMENTO");

                            b1.HasOne("DesafioEcommerce.Domain.Entities.Payment")
                                .WithOne("Name")
                                .HasForeignKey("DesafioEcommerce.Domain.ValueObjects.Name", "PaymentId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
